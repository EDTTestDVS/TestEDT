
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Объект.РучныеНастройки = Ложь;
	Объект.НомерЛиста = 1;
	Элементы.ГруппаСтрокиКолонки.Доступность = Ложь;
	Элементы.ФормаВыполнитьСверку.Видимость = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Элементы.ПоДаннымКлиентаСлужебные.Видимость = ПоказатьСлужебныеКолонки;
КонецПроцедуры

&НаКлиенте
Процедура ДанныеАктовСверкиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДанныеАктовСверкиПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура РучныеНастройкиПриИзменении(Элемент)
	Элементы.ГруппаСтрокиКолонки.Доступность = Объект.РучныеНастройки;	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСлужебныеКолонкиПриИзменении(Элемент)
	Элементы.ПоДаннымКлиентаСлужебные.Видимость = ПоказатьСлужебныеКолонки;
КонецПроцедуры

# КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ФайлАктСверкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);	
	ДиалогВыбораФайла.Фильтр    = НСтр("ru='Документ Excel (*.xls;*.xlsx)|*.xls;*.xlsx'");	
	ДиалогВыбораФайла.Заголовок = НСтр("ru='Выберите файл ...'");
	ДиалогВыбораФайла.МножественныйВыбор = Ложь;
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла = Истина;
	Если ДиалогВыбораФайла.Выбрать() Тогда
		Объект.ФайлАктСверки = ДиалогВыбораФайла.ПолноеИмяФайла;
	КонецЕсли;
	
	Элементы.ДанныеАктовСверки.ЦветТекста = WebЦвета.Серый;
	Элементы.ФормаПрочитатьФайл.КнопкаПоУмолчанию = Истина;
	Элементы.ФормаВыполнитьСверку.Видимость = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискКолонок(Команда)
	
	АвтоПоискКолонок();
	
КонецПроцедуры

&НаКлиенте
Функция АвтоПоискКолонок()
	
	Файл = Объект.ФайлАктСверки;
	
	Excel = ПолучитьФайл_Excel(Файл);
	Если Excel = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;	
	
	Состояние("Анализируем файл....");
	
	Данные = Прочитать_Excel(Объект.НомерЛиста, Новый Структура("Excel", Excel));
	
	ВсегоКолонок = Данные.Количество();
	
	Объект.КолонкаНомерПП = 0;
	Объект.КолонкаДата = 0;
	Объект.КолонкаНомер = 0;
	Объект.КолонкаДокумент = 0;
	Объект.КолонкаДебет = 0;
	Объект.КолонкаКредит = 0;
	Объект.СтрокаШапки = 0;
	
	Для Строка = 0 По 30 Цикл
		Для Колонка = 0 По ВсегоКолонок - 1 Цикл
			ЧтоВнутри = СокрЛП(Данные[Колонка][Строка]);
			ЧтоВнутри = СтрЗаменить(ЧтоВнутри, Символ(10), " ");
			Если НРег(ЧтоВнутри) = "№ п/п" 
					И Объект.КолонкаНомерПП = 0 
					Тогда 
				Объект.КолонкаНомерПП = Колонка + 1;
			ИначеЕсли (ЧтоВнутри = "Дата операции"
						ИЛИ ЧтоВнутри = "Дата")
					И Объект.КолонкаДата = 0 
					Тогда 
				Объект.КолонкаДата = Колонка + 1;
			ИначеЕсли ЧтоВнутри = "Номер" 
					И Объект.КолонкаНомер = 0 
					Тогда 
				Объект.КолонкаНомер = Колонка + 1;
			ИначеЕсли (ЧтоВнутри = "Документ" 
						ИЛИ ЧтоВнутри = "Наименование операции, документы"
						ИЛИ ЧтоВнутри = "Вид документа")
					И Объект.КолонкаДокумент = 0 
					Тогда 
				Объект.КолонкаДокумент = Колонка + 1;
			ИначеЕсли ЧтоВнутри = "Дебет"
					И Объект.КолонкаДебет = 0 
					Тогда 
				Объект.КолонкаДебет = Колонка + 1;
			ИначеЕсли ЧтоВнутри = "Кредит"
					И Объект.КолонкаКредит = 0 
					Тогда 
				Объект.КолонкаКредит = Колонка + 1;
			КонецЕсли;
			Если НЕ Объект.КолонкаДокумент = 0 
					И НЕ Объект.КолонкаДебет = 0 
					И НЕ Объект.КолонкаКредит = 0
					Тогда
				Объект.СтрокаШапки = Строка + 1;
				Прервать;
			КонецЕсли;	
		КонецЦикла;
		Если Объект.СтрокаШапки >= 0 Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если Объект.КолонкаДокумент = 0 Тогда 
		Сообщить("Колонка ""Документ"" не найдена. Заполните номер колонки."); 
		Данные = Неопределено;
	КонецЕсли;
	Если Объект.КолонкаДебет = 0 Тогда 
		Сообщить("Колонка ""Дебет"" не найдена. Заполните номер колонки."); 
		Данные = Неопределено;
	КонецЕсли;
	Если Объект.КолонкаКредит = 0 Тогда 
		Сообщить("Колонка ""Кредит"" не найдена. Заполните номер колонки."); 
		Данные = Неопределено;
	КонецЕсли;
	
	Возврат Данные;
	
КонецФункции

&НаКлиенте
Процедура ПрочитатьФайл(Команда)

	Если НЕ Объект.РучныеНастройки Тогда
		Данные = АвтоПоискКолонок();
	КонецЕсли;
	
	Если Данные = Неопределено Тогда
		Сообщить("Ошибка чтения файла!");
		Возврат;
	КонецЕсли;
	
	Состояние("Загружаем данные в таблицу....");
	ЗагрузитьАктСверкиКлиента(Данные);
	
	Элементы.ДанныеАктовСверки.ЦветТекста = Новый Цвет();
	Элементы.ФормаПрочитатьФайл.КнопкаПоУмолчанию = Ложь;
	Элементы.ФормаВыполнитьСверку.КнопкаПоУмолчанию = Истина;
	Элементы.ФормаВыполнитьСверку.Видимость = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьАктСверкиКлиента(Данные)
	
	Объект.ДанныеАктовСверки.Очистить();
	ВсегоСтрок = Данные[0].Количество() - 1;
	
	Для Строка = Объект.СтрокаШапки По ВсегоСтрок Цикл
		
		ОписаниеДокумента = СокрЛП(Данные[Объект.КолонкаДокумент - 1][Строка]);
		ДанныеДата = Дата(1,1,1);
		ДанныеНомерПП = 0;
		Если Объект.КолонкаДата > 0 И Объект.КолонкаНомерПП = 0 Тогда
			ДанныеДата = СокрЛП(Данные[Объект.КолонкаДата - 1][Строка]);
			
			Если СтрНайти(ВРег(ДанныеДата), ВРег("Сальдо начальное")) > 0 
					ИЛИ СтрНайти(ВРег(ДанныеДата), ВРег("Сальдо на")) > 0
					ИЛИ СтрНайти(ВРег(ОписаниеДокумента), ВРег("Сальдо начальное")) > 0
					ИЛИ СтрНайти(ВРег(ОписаниеДокумента), ВРег("Сальдо на")) > 0
				    ИЛИ СтрНайти(ВРег(ОписаниеДокумента), ВРег("Задолженность по состоянию")) > 0
					Тогда
				Продолжить;
			КонецЕсли;
			Если СтрНайти(ВРег(ДанныеДата), ВРег("Сальдо конечное")) > 0 
					ИЛИ СтрНайти(ВРег(ДанныеДата), ВРег("Сальдо на")) > 0
				    ИЛИ СтрНайти(ВРег(ДанныеДата), ВРег("Обороты за период")) > 0
				    ИЛИ СтрНайти(ВРег(ОписаниеДокумента), ВРег("Сальдо конечное")) > 0
					ИЛИ СтрНайти(ВРег(ОписаниеДокумента), ВРег("Сальдо на")) > 0
				    ИЛИ СтрНайти(ВРег(ОписаниеДокумента), ВРег("Обороты за период")) > 0
					Тогда
				Прервать;
			КонецЕсли;
			
			ДанныеДата = СтрВДату(ДанныеДата);
			Если НЕ ТипЗнч(ДанныеДата) = Тип("Дата") Тогда
				Продолжить;
			КонецЕсли;
		ИначеЕсли Объект.КолонкаНомерПП > 0 Тогда 	
			ДанныеНомерПП = СокрЛП(Данные[Объект.КолонкаНомерПП - 1][Строка]);
			Если НЕ ЗначениеЗаполнено(ДанныеНомерПП) Тогда
				Продолжить;
			КонецЕсли;	
			
			Если СтрНайти(ВРег(ДанныеНомерПП), ВРег("Сальдо начальное")) > 0 
					ИЛИ СтрНайти(ВРег(ДанныеНомерПП), ВРег("Сальдо на")) > 0
					ИЛИ СтрНайти(ВРег(ОписаниеДокумента), ВРег("Сальдо начальное")) > 0
					ИЛИ СтрНайти(ВРег(ОписаниеДокумента), ВРег("Сальдо на")) > 0
				    ИЛИ СтрНайти(ВРег(ОписаниеДокумента), ВРег("Задолженность по состоянию")) > 0
					Тогда
				Продолжить;
			КонецЕсли;
			Если СтрНайти(ВРег(ДанныеНомерПП), ВРег("Сальдо конечное")) > 0 
					ИЛИ СтрНайти(ВРег(ДанныеНомерПП), ВРег("Сальдо на")) > 0
				    ИЛИ СтрНайти(ВРег(ДанныеНомерПП), ВРег("Обороты за период")) > 0
				    ИЛИ СтрНайти(ВРег(ОписаниеДокумента), ВРег("Сальдо конечное")) > 0
					ИЛИ СтрНайти(ВРег(ОписаниеДокумента), ВРег("Сальдо на")) > 0
				    ИЛИ СтрНайти(ВРег(ОписаниеДокумента), ВРег("Обороты за период")) > 0
					Тогда
				Прервать;
			КонецЕсли;
			
			Если Объект.КолонкаДата > 0 Тогда
				ДанныеДата = СокрЛП(Данные[Объект.КолонкаДата - 1][Строка]);
				ДанныеДата = СтрВДату(ДанныеДата);
				Если ДанныеДата = Дата(1,1,1) Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
		Иначе
			Сообщить("Ошибка заполнения таблицы!");
			Возврат;
		КонецЕсли;
		
		НоваяСтрока = Объект.ДанныеАктовСверки.Добавить();
		НоваяСтрока.КлиентНомерПП = ДанныеНомерПП;
		НоваяСтрока.КлиентДата = ДанныеДата;
		Если Объект.КолонкаНомер > 0 Тогда
			НоваяСтрока.КлиентНомер = Данные[Объект.КолонкаНомер - 1][Строка];
		КонецЕсли;	
		НоваяСтрока.КлиентДокумент = ОписаниеДокумента;
		
		Попытка
			КлиентДебет = Число(Данные[Объект.КолонкаДебет - 1][Строка]);
		Исключение
			КлиентДебет = 0;
		КонецПопытки;
		Если НЕ КлиентДебет = 0 Тогда
			Если КлиентДебет > 0 Тогда
				НоваяСтрока.КлиентДебет = КлиентДебет;
			Иначе
				НоваяСтрока.КлиентКредит = - КлиентДебет;
			КонецЕсли;	
		КонецЕсли;	
		
		Попытка
			КлиентКредит = Число(Данные[Объект.КолонкаКредит - 1][Строка]);
		Исключение
			КлиентКредит = 0;
		КонецПопытки;
		Если НЕ КлиентКредит = 0 Тогда
			Если КлиентКредит > 0 Тогда
				НоваяСтрока.КлиентКредит = КлиентКредит;
			Иначе
				НоваяСтрока.КлиентДебет = - КлиентКредит;
			КонецЕсли;	
		КонецЕсли;	
		
		Если ЗначениеЗаполнено(НоваяСтрока.КлиентДокумент) Тогда
			ОписаниеДокумента = ВРег(ОписаниеДокумента);

			Если СтрНайти(ОписаниеДокумента, ВРег("Корректировка продажи")) = 1
					ИЛИ СтрНайти(ОписаниеДокумента, ВРег("Возврат товаров от клиента")) = 1
					ИЛИ СтрНайти(ОписаниеДокумента, ВРег("Накладная (возврат)")) = 1
					ИЛИ СтрНайти(ОписаниеДокумента, ВРег("Корректировка реализации")) = 1
					ИЛИ СтрНайти(ОписаниеДокумента, ВРег("Возврат товаров от покупателя")) = 1
					ИЛИ (СтрНайти(ОписаниеДокумента, ВРег("Счет фактура выданный")) = 1 И НоваяСтрока.КлиентКредит > 0)
					ИЛИ СтрНайти(ОписаниеДокумента, ВРег("Корректировка")) = 1
					Тогда
					
				Если СтрНайти(ОписаниеДокумента, ВРег("Корректировка продажи")) = 1 И СтрНайти(ОписаниеДокумента, ВРег("Счет-фактура")) > 0 Тогда
					// "([Номер] от [Дата])"
					РазборНомераИДаты_2(НоваяСтрока, ОписаниеДокумента, , 2);				
				ИначеЕсли СтрНайти(ОписаниеДокумента, ВРег("Корректировка продажи")) = 1 И СтрНайти(ОписаниеДокумента, ВРег(",№")) > 0 Тогда
					// "([Дата],№[Номер])"
					РазборНомераИДаты_3(НоваяСтрока, ОписаниеДокумента, ",№");				
				ИначеЕсли СтрНайти(ОписаниеДокумента, ВРег("Корректировка")) = 1 И СтрНайти(ОписаниеДокумента, ВРег(", док.")) > 0 Тогда
					// "([Дата], док. [Номер])"
					РазборНомераИДаты_3(НоваяСтрока, ОписаниеДокумента, ", док.");				
				ИначеЕсли (СтрНайти(ОписаниеДокумента, ВРег("Корректировка продажи")) = 1 ИЛИ СтрНайти(ОписаниеДокумента, ВРег("Корректировка реализации")) = 1) 
						И СтрНайти(ОписаниеДокумента, ВРег("№")) = 0 Тогда
					// "([Номер] от [Дата])"
					РазборНомераИДаты_2(НоваяСтрока, ОписаниеДокумента);				
				Иначе
					// "№ [Номер] от [Дата]" или "(№ [Номер] от [Дата])"
					РазборНомераИДаты_1(НоваяСтрока, ОписаниеДокумента);				
				КонецЕсли;	
					
				НоваяСтрока.ТипДокумента = "КорректировкаПриобретения";	
				
			ИначеЕсли СтрНайти(ОписаниеДокумента, ВРег("Продажа")) = 1 
					ИЛИ СтрНайти(ОписаниеДокумента, ВРег("Реализация товаров и услуг")) = 1 
					ИЛИ СтрНайти(ОписаниеДокумента, ВРег("УПД")) = 1 
					ИЛИ СтрНайти(ОписаниеДокумента, ВРег("Накладная")) = 1 
					ИЛИ СтрНайти(ОписаниеДокумента, ВРег("Реализация товаров")) = 1 
					ИЛИ СтрНайти(ОписаниеДокумента, ВРег("Реализация")) = 1 
					ИЛИ (СтрНайти(ОписаниеДокумента, ВРег("Счет фактура выданный")) = 1 И НоваяСтрока.КлиентДебет > 0)
					ИЛИ СтрНайти(ОписаниеДокумента, ВРег("Отгрузка")) = 1 
					Тогда
					
				Если СтрНайти(ОписаниеДокумента, ВРег("Продажа")) = 1 И СтрНайти(ОписаниеДокумента, ВРег("Счет-фактура")) > 0 Тогда
					// "([Номер] от [Дата])"
					РазборНомераИДаты_2(НоваяСтрока, ОписаниеДокумента, , 2);				
				ИначеЕсли СтрНайти(ОписаниеДокумента, ВРег("Продажа")) = 1 И СтрНайти(ОписаниеДокумента, ВРег(",№")) > 0 Тогда
					// "([Дата],№[Номер])"
					РазборНомераИДаты_3(НоваяСтрока, ОписаниеДокумента, ",№");				
				ИначеЕсли СтрНайти(ОписаниеДокумента, ВРег("Отгрузка")) = 1 И СтрНайти(ОписаниеДокумента, ВРег(", док.")) > 0 Тогда
					// "([Дата], док. [Номер])"
					РазборНомераИДаты_3(НоваяСтрока, ОписаниеДокумента, ", док.");				
				ИначеЕсли СтрНайти(ОписаниеДокумента, ВРег("Продажа")) = 1 И СтрНайти(ОписаниеДокумента, ВРег("№")) = 0 Тогда
					// "([Номер] от [Дата])"
					РазборНомераИДаты_2(НоваяСтрока, ОписаниеДокумента);				
				Иначе
					// "№ [Номер] от [Дата]" или "(№ [Номер] от [Дата])"
					РазборНомераИДаты_1(НоваяСтрока, ОписаниеДокумента);		
				КонецЕсли;	
				
				НоваяСтрока.ТипДокумента = "ПриобретениеТоваровУслуг";	
				
			ИначеЕсли СтрНайти(ОписаниеДокумента, ВРег("Оплата")) = 1
					ИЛИ СтрНайти(ОписаниеДокумента, ВРег("Поступление безналичных ДС")) = 1
					ИЛИ СтрНайти(ОписаниеДокумента, ВРег("Платежное поручение входящее")) = 1
					ИЛИ СтрНайти(ОписаниеДокумента, ВРег("Платежное поручение")) = 1
					ИЛИ СтрНайти(ОписаниеДокумента, ВРег("Строка выписки приход")) = 1
					Тогда
					
				Если СтрНайти(ОписаниеДокумента, ВРег("Оплата")) = 1 И СтрНайти(ОписаниеДокумента, ВРег(",№")) > 0 Тогда
					// "([Дата],№[Номер])"
					РазборНомераИДаты_3(НоваяСтрока, ОписаниеДокумента, ",№");				
				ИначеЕсли СтрНайти(ОписаниеДокумента, ВРег("Оплата")) = 1 И СтрНайти(ОписаниеДокумента, ВРег(", п/п")) > 0 Тогда
					// "([Дата], п/п [Номер])"
					РазборНомераИДаты_3(НоваяСтрока, ОписаниеДокумента, ", п/п");				
				ИначеЕсли СтрНайти(ОписаниеДокумента, ВРег("Поступление безналичных ДС")) = 1 И СтрНайти(ОписаниеДокумента, ВРег("Вх.Док")) > 1 Тогда
					// "№ [Номер] от [Дата]" или "(№ [Номер] от [Дата])"
					РазборНомераИДаты_1(НоваяСтрока, ОписаниеДокумента, , 2);				
				ИначеЕсли СтрНайти(ОписаниеДокумента, ВРег("Оплата")) = 1 И СтрНайти(ОписаниеДокумента, ВРег("#")) = 0 Тогда
					// "([Номер] от [Дата])"
					РазборНомераИДаты_2(НоваяСтрока, ОписаниеДокумента);				
				Иначе
					// "№ [Номер] от [Дата]" или "(№ [Номер] от [Дата])"
					РазборНомераИДаты_1(НоваяСтрока, ОписаниеДокумента);				
				КонецЕсли;	
					
				НоваяСтрока.ТипДокумента = "СписаниеБезналичныхДенежныхСредств";	
				
			КонецЕсли;		
		КонецЕсли;
		
		НоваяСтрока.СортировкаДата = ?(ЗначениеЗаполнено(НоваяСтрока.КлиентДатаДокумента), НоваяСтрока.КлиентДатаДокумента, НоваяСтрока.КлиентДата);
		НоваяСтрока.СортировкаПриоритет = 1;
	КонецЦикла;	                                                                         
	
КонецПроцедуры	

&НаКлиенте
Процедура ВыполнитьСверку(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.АктСверки) Тогда
		Сообщить("Не выбран дакумент ""Акт сверки""");
		Возврат;
	КонецЕсли;	
	ВыполнитьСверкуНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьСверкуНаСервере()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СверкаВзаиморасчетовДетальныеЗаписиРасчеты.РасчетныйДокумент КАК РасчетныйДокумент,
		|	ВЫБОР
		|		КОГДА СверкаВзаиморасчетовДетальныеЗаписиРасчеты.СуммаДолг < СверкаВзаиморасчетовДетальныеЗаписиРасчеты.СуммаАванс
		|			ТОГДА СверкаВзаиморасчетовДетальныеЗаписиРасчеты.СуммаВзаиморасчетов
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Дебет,
		|	ВЫБОР
		|		КОГДА СверкаВзаиморасчетовДетальныеЗаписиРасчеты.СуммаДолг > СверкаВзаиморасчетовДетальныеЗаписиРасчеты.СуммаАванс
		|			ТОГДА СверкаВзаиморасчетовДетальныеЗаписиРасчеты.СуммаВзаиморасчетов
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Кредит,
		|	ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(СверкаВзаиморасчетовДетальныеЗаписиРасчеты.РасчетныйДокумент) = ТИП(Документ.ПриобретениеТоваровУслуг)
		|				ИЛИ ТИПЗНАЧЕНИЯ(СверкаВзаиморасчетовДетальныеЗаписиРасчеты.РасчетныйДокумент) = ТИП(Документ.КорректировкаПриобретения)
		|				ИЛИ ТИПЗНАЧЕНИЯ(СверкаВзаиморасчетовДетальныеЗаписиРасчеты.РасчетныйДокумент) = ТИП(Документ.СписаниеБезналичныхДенежныхСредств)
		|			ТОГДА СверкаВзаиморасчетовДетальныеЗаписиРасчеты.РасчетныйДокумент.ДатаВходящегоДокумента
		|		ИНАЧЕ СверкаВзаиморасчетовДетальныеЗаписиРасчеты.РасчетныйДокумент.Дата
		|	КОНЕЦ КАК ДатаДокумента,
		|	ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(СверкаВзаиморасчетовДетальныеЗаписиРасчеты.РасчетныйДокумент) = ТИП(Документ.ПриобретениеТоваровУслуг)
		|				ИЛИ ТИПЗНАЧЕНИЯ(СверкаВзаиморасчетовДетальныеЗаписиРасчеты.РасчетныйДокумент) = ТИП(Документ.КорректировкаПриобретения)
		|				ИЛИ ТИПЗНАЧЕНИЯ(СверкаВзаиморасчетовДетальныеЗаписиРасчеты.РасчетныйДокумент) = ТИП(Документ.СписаниеБезналичныхДенежныхСредств)
		|			ТОГДА СверкаВзаиморасчетовДетальныеЗаписиРасчеты.РасчетныйДокумент.НомерВходящегоДокумента
		|		ИНАЧЕ СверкаВзаиморасчетовДетальныеЗаписиРасчеты.РасчетныйДокумент.Номер
		|	КОНЕЦ КАК НомерДокумента,
		|	ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(СверкаВзаиморасчетовДетальныеЗаписиРасчеты.РасчетныйДокумент) = ТИП(Документ.ПриобретениеТоваровУслуг)
		|			ТОГДА ""ПриобретениеТоваровУслуг""
		|		КОГДА ТИПЗНАЧЕНИЯ(СверкаВзаиморасчетовДетальныеЗаписиРасчеты.РасчетныйДокумент) = ТИП(Документ.КорректировкаПриобретения)
		|			ТОГДА ""КорректировкаПриобретения""
		|		КОГДА ТИПЗНАЧЕНИЯ(СверкаВзаиморасчетовДетальныеЗаписиРасчеты.РасчетныйДокумент) = ТИП(Документ.СписаниеБезналичныхДенежныхСредств)
		|			ТОГДА ""СписаниеБезналичныхДенежныхСредств""
		|		ИНАЧЕ ""Неопределено""
		|	КОНЕЦ КАК ТипДокумента,
		|	ЛОЖЬ КАК Сопоставлен
		|ИЗ
		|	Документ.СверкаВзаиморасчетов.ДетальныеЗаписиРасчеты КАК СверкаВзаиморасчетовДетальныеЗаписиРасчеты
		|ГДЕ
		|	СверкаВзаиморасчетовДетальныеЗаписиРасчеты.Ссылка = &Ссылка
		|	И СверкаВзаиморасчетовДетальныеЗаписиРасчеты.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСПоставщиком)";
	
	Запрос.УстановитьПараметр("Ссылка", Объект.АктСверки); 
	
	ДетальныеЗаписиРасчеты = Запрос.Выполнить().Выгрузить();
	
	ТаблицаСверки = Объект.ДанныеАктовСверки.Выгрузить();
	ТаблицаСверки.ЗаполнитьЗначения(0, "Дебет, Кредит");
	ТаблицаСверки.ЗаполнитьЗначения("", "Номер");
	ТаблицаСверки.ЗаполнитьЗначения(Неопределено, "Документ");
	ТаблицаСверки.ЗаполнитьЗначения(Дата(1,1,1), "Дата");
	
	Отбор = Новый Структура;
	Отбор.Вставить("СортировкаПриоритет", 2);
	МассивСтрок = ТаблицаСверки.НайтиСтроки(Отбор);
	Для Каждого Строка Из МассивСтрок Цикл
		ТаблицаСверки.Удалить(Строка);
	КонецЦикла;	
	
	Отбор.Очистить();
	Отбор.Вставить("Сопоставлен", Ложь);
	Для Каждого Строка Из ТаблицаСверки Цикл
		
		Отбор.Вставить("НомерДокумента", Строка.КлиентНомерДокумента);
		Отбор.Вставить("ДатаДокумента", Строка.КлиентДатаДокумента);
		Отбор.Вставить("ТипДокумента", Строка.ТипДокумента);
		Отбор.Вставить("Дебет", Строка.КлиентКредит);
		Отбор.Вставить("Кредит", Строка.КлиентДебет);
		
		МассивСтрок = ДетальныеЗаписиРасчеты.НайтиСтроки(Отбор);
		Если МассивСтрок.Количество() = 1 Тогда
			Строка.Дата = МассивСтрок[0].ДатаДокумента;
			Строка.Номер = МассивСтрок[0].НомерДокумента;
			Строка.Документ = МассивСтрок[0].РасчетныйДокумент;
			Строка.Дебет = МассивСтрок[0].Дебет;
			Строка.Кредит = МассивСтрок[0].Кредит;
			
			МассивСтрок[0].Сопоставлен = Истина;
			Продолжить;
		ИначеЕсли МассивСтрок.Количество() > 1 Тогда
			Продолжить;
		КонецЕсли;	
		
		Отбор.Удалить("НомерДокумента");
		
		МассивСтрок = ДетальныеЗаписиРасчеты.НайтиСтроки(Отбор);
		Если МассивСтрок.Количество() > 0 Тогда
			Строка.Дата = МассивСтрок[0].ДатаДокумента;
			Строка.Номер = МассивСтрок[0].НомерДокумента;
			Строка.Документ = МассивСтрок[0].РасчетныйДокумент;
			Строка.Дебет = МассивСтрок[0].Дебет;
			Строка.Кредит = МассивСтрок[0].Кредит;
			
			МассивСтрок[0].Сопоставлен = Истина;
			Продолжить;
		КонецЕсли;	
		
		Отбор.Удалить("ДатаДокумента");
		
		МассивСтрок = ДетальныеЗаписиРасчеты.НайтиСтроки(Отбор);
		Если МассивСтрок.Количество() > 0 Тогда
			Строка.Дата = МассивСтрок[0].ДатаДокумента;
			Строка.Номер = МассивСтрок[0].НомерДокумента;
			Строка.Документ = МассивСтрок[0].РасчетныйДокумент;
			Строка.Дебет = МассивСтрок[0].Дебет;
			Строка.Кредит = МассивСтрок[0].Кредит;
			
			МассивСтрок[0].Сопоставлен = Истина;
		КонецЕсли;	
		
	КонецЦикла;
	
	Отбор.Очистить();
	Отбор.Вставить("Сопоставлен", Ложь);
	МассивСтрок = ДетальныеЗаписиРасчеты.НайтиСтроки(Отбор);
	Для Каждого Строка Из МассивСтрок Цикл
		НоваяСтрока = ТаблицаСверки.Добавить();
		НоваяСтрока.Дата = Строка.ДатаДокумента;
		НоваяСтрока.Номер = Строка.НомерДокумента;
		НоваяСтрока.Документ = Строка.РасчетныйДокумент;
		НоваяСтрока.Дебет = Строка.Дебет;
		НоваяСтрока.Кредит = Строка.Кредит;
		
		НоваяСтрока.СортировкаДата = НоваяСтрока.Дата;
		НоваяСтрока.СортировкаПриоритет = 2;
	КонецЦикла;
	
	ТаблицаСверки.Сортировать("СортировкаДата, СортировкаПриоритет");
	
	Объект.ДанныеАктовСверки.Загрузить(ТаблицаСверки);
	
КонецПроцедуры

# КонецОбласти


# Область ОбщиеПроцедуры

&НаКлиенте
Функция ПолучитьФайл_Excel(Файл)
	
	ФайлНаДиске = Новый Файл(Файл);
	Если Не ФайлНаДиске.Существует() Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не найден файл: " + Файл;
		Сообщение.Сообщить();
		Возврат Неопределено;
	КонецЕсли;	
	
	Excel = Неопределено;
	Попытка
		Состояние("Загрузка Microsoft Excel...");
		Excel = Новый COMОбъект("Excel.Application");
	Исключение
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Ошибка при загрузке Microsoft Excel." + Символы.ПС + ОписаниеОшибки();
		Сообщение.Сообщить();
		Возврат Неопределено;
	КонецПопытки;
	
	Попытка
		Excel.WorkBooks.Open(Файл);	
	Исключение		
		Excel.Quit();
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Ошибка при открытии/чтении файла: " + Файл + "." + Символы.ПС + ОписаниеОшибки();
		Сообщение.Сообщить();
		Возврат Неопределено;
	КонецПопытки;
	
	Возврат Excel;
	
КонецФункции	

&НаКлиенте
Функция Прочитать_Excel(Результат, Параметры)

	Excel = Параметры.Excel;
	ExcelЛист = Excel.Sheets(Результат);
	Состояние("Чтение данных из файла Excel...");
	
	ВсегоСтрок = ExcelЛист.UsedRange.Rows.Count;
	ВсегоКолонок = ExcelЛист.UsedRange.Columns.Count;
	Область = ExcelЛист.Range(ExcelЛист.Cells(1,1), ExcelЛист.Cells(ВсегоСтрок,ВсегоКолонок));
	Данные = Область.Value.Выгрузить();
	
	Excel.DisplayAlerts = 0;
	Excel.WorkBooks.Close();
	Excel = Неопределено;
	
	Возврат Данные;
	
КонецФункции	

// Преобразует строку в дату
// Параметры
//  сДата  – строка
// Возвращаемое значение:
//   дата - тип.дата 
//
// для тестов:
//Сообщить(СтрВДату("20:01:0"));    
//Сообщить(СтрВДату("27/08\2015 3-15-22"));
//Сообщить(СтрВДату(20150320220315));
//Сообщить(СтрВДату("2/3/55"));
//Сообщить(СтрВДату("05/3/15"));
//Сообщить(СтрВДату("1 ФеВраЛя 05 г. 20:01:0"));    
//Сообщить(СтрВДату("1 янв. 2005 г ::"));    
//Сообщить(СтрВДату("1 янв 2005г. ::01"));
//Сообщить(СтрВДату("1 янв 2005г ::01"));    
//Сообщить(СтрВДату("1 ФеВраЛь 05 г. 0:02:"));
//Сообщить(СтрВДату("1 янВа 2005 г. 20:01"));
//Сообщить(СтрВДату("02/04/2015"));
//Сообщить(СтрВДату("20150320220315"));
//Сообщить(СтрВДату("27.08.2015 3:15:22"));
//Сообщить(СтрВДату("27.08-2015 5:24"));
//
&НаКлиенте
Функция СтрВДату(Знач сДата)
    
	Перем п_мТЕМП; // массив временных переменных
	
	//-----для локализации ------------------------------
	Перем п_мФорматы;
	п_мФорматы = Новый Массив(5);
	п_мФорматы[0] = "г";    // знак года
	п_мФорматы[1] = "ЧЦ=2; ЧН=; ЧВН=";
	п_мФорматы[2] = "ЧГ=0";    
	п_мФорматы[3] = "ДФ=МММ";
	п_мФорматы[4] = "ДЛФ=ДД";
	//---------------------------------------------------
	
	Если ПустаяСтрока(сДата) Тогда
		Возврат Дата("00010101000000");
	КонецЕсли;
	
	сДата = Формат(сДата, п_мФорматы[2]);        // на случай если в формате 1с числом: 20150320220315. (+локализация)
	
	// Если использовать конструкцию "Если Найти(сДата,..." , то перебор букв строки будет происходить 2а раза: Найти и СтрЗаменить //Использование Найти в данном случае бессмысленно
	// можно добавить любой разделитель - @, #, %, и тд, неважно. Главное, заменить их на "."
	сДата = СтрЗаменить(сДата, "«", "");             		// «1 Фев 05 г.»
	сДата = СтрЗаменить(сДата, "»", "");            		// «1 Фев 05 г.»
	сДата = СтрЗаменить(сДата, "(", "");             		// (1 Фев 05 г.)
	сДата = СтрЗаменить(сДата, ")", "");            		// (1 Фев 05 г.)
	сДата = СтрЗаменить(ВРег(сДата), ВРег(п_мФорматы[0] + "."), "");   	// 1 Фев 05 г. 17:20:00 //просто "г" нельзя из-за "авГуст", например. Но в далее,после парсинга месяца, любое "г" в строке,  удаляется
	сДата = СтрЗаменить(сДата, "/", ".");            		// 1/2/5
	сДата = СтрЗаменить(сДата, "\", ".");            		// 1\02\05
	сДата = СтрЗаменить(сДата, "-", ".");            		// 1-02-05
	сДата = СтрЗаменить(сДата, Символы.Таб, ".");        	// 01.02.2005    17:20:00    
	сДата = СтрЗаменить(сДата, " ", ".");            		// 1/02 2005 17:20:00
	сДата = СтрЗаменить(сДата, "..",  ".");            		// Возможны, появление двойных точек из за "янв." в "янв" или из-за " г. ".    
	сДата = НРег(СокрЛП(сДата));                 			// строку в нижний регистр, чтоб проще было с Янв Январь янв и тд
	
	п_мТЕМП = Новый массив(8); //массив для временных переменных    
	
	п_мТЕМП[0] = Найти(сДата,".");
	
	Если п_мТЕМП[0] = 0 Тогда
		//если точек нет
		Если Найти(сДата,":") Тогда
			//только время (или ошибка)
			сДата = "01.01.0001." + сДата;
			п_мТЕМП[0] = Найти(сДата,".");
		иначе            
			//похоже на формат 1с. Можно добавить "попытку"...
			п_мТЕМП[6] = дата(сДата);
			Возврат п_мТЕМП[6];
		КонецЕсли;    
	КонецЕсли;
	
	// ----- ДНИ -------------------------------------
	п_мТЕМП[0] = Лев(сДата, п_мТЕМП[0] - 1);//дни 
	п_мТЕМП[4] = Прав(сДата, СтрДлина(сДата) - СтрДлина(п_мТЕМП[0])-1);// месяц и все что справа
	п_мТЕМП[0] = Формат(Число(п_мТЕМП[0]),п_мФорматы[1]);//дни в формат двух чисел
	
	// ----- Месяц -----------------------------------
	п_мТЕМП[1] = Лев(п_мТЕМП[4], найти(п_мТЕМП[4],".") - 1);// месяц
	п_мТЕМП[4] = Прав(п_мТЕМП[4], СтрДлина(п_мТЕМП[4]) - СтрДлина(п_мТЕМП[1])-1);// год и все что справа
	//Возможны варианты месяца "янв" "янв." "январь" "января" 
	Если СтрДлина(п_мТЕМП[1]) > 2 Тогда // месяц в виде янв или январь
		п_мТЕМП[2] = 0;
		Пока п_мТЕМП[2] < 12 Цикл 
			п_мТЕМП[2] = п_мТЕМП[2]+1;
			// берем из "янв." только "янв"
			п_мТЕМП[3] = СтрЗаменить(Формат(Дата("2001" + Формат(п_мТЕМП[2],п_мФорматы[1]) + "01"), п_мФорматы[3]),".","");// + локализация
			п_мТЕМП[3] = найти(п_мТЕМП[1], п_мТЕМП[3]);
			Если п_мТЕМП[3] > 0 Тогда
				п_мТЕМП[1] = Формат(п_мТЕМП[2],п_мФорматы[1]);
				Прервать;
			КонецЕсли;
			п_мТЕМП[7] = Формат(Дата("2001" + Формат(п_мТЕМП[2],п_мФорматы[1]) + "01"), п_мФорматы[4]);
			п_мТЕМП[7] = Сред(п_мТЕМП[7], СтрНайти(п_мТЕМП[7], " ") + 1);
			п_мТЕМП[7] = Лев(п_мТЕМП[7], СтрНайти(п_мТЕМП[7], " ") - 1);
			п_мТЕМП[3] = найти(п_мТЕМП[1], п_мТЕМП[7]);
			Если п_мТЕМП[3] > 0 Тогда
				п_мТЕМП[1] = Формат(п_мТЕМП[2],п_мФорматы[1]);
				Прервать;
			КонецЕсли;
		КонецЦикла;    
	Иначе
		п_мТЕМП[1] = Формат(Число(п_мТЕМП[1]),п_мФорматы[1]);
	КонецЕсли;
	
	// ----- ГОД -----------------------------------
	//Если в строке было "г" без точки("г.")
	п_мТЕМП[4] = СтрЗаменить(п_мТЕМП[4], п_мФорматы[0], "");
	//ищем год. Дата может быть без времени, т.е. год последний в строке
	п_мТЕМП[2] = Найти(п_мТЕМП[4],".");
	
	Если п_мТЕМП[2] > 0 Тогда
		п_мТЕМП[2] =  Лев(п_мТЕМП[4], п_мТЕМП[2] - 1); // год
		п_мТЕМП[4] = Прав(п_мТЕМП[4], СтрДлина(п_мТЕМП[4]) - СтрДлина(п_мТЕМП[2])-1); //время и все что справа
	Иначе
		п_мТЕМП[2] = п_мТЕМП[4];
		п_мТЕМП[4] = "";
	КонецЕсли;    
	
	//проверяем год
	п_мТЕМП[3] = СтрДлина(п_мТЕМП[2]);
	//если год из двух цыфр
	Если п_мТЕМП[3] = 2 или п_мТЕМП[3] = 1 Тогда
		п_мТЕМП[3] = Число(п_мТЕМП[2]);// год как число
		//что означает 15 в "20.03.15"? это 2015г или 1915г? (Настраиваем под себя или выдаём ошибку)
		// в моем варианте если  < 50 то это 2000г. иначе 1900г.
		Если п_мТЕМП[3] < 50 Тогда 
			п_мТЕМП[2] = "20" + Формат(п_мТЕМП[3],п_мФорматы[1]);
		Иначе
			п_мТЕМП[2] = "19" + Формат(п_мТЕМП[3],п_мФорматы[1]);
		КонецЕсли;    
	КонецЕсли;
	
	// =======================  Форматируем время ==============================
	п_мТЕМП[6] = СтрЗаменить(п_мТЕМП[4],":", ".");// если дата была, например: 17-30-10, то сейчас 17.30.10 
	//"попытка" на преобразование даты, по времени, занимает столько же, а по ресурсам больше, чем сам парсинг времени. 
	//поэтому, убиваем двух зайцев перебором часы/мин/сек сразу
	Если СтрДлина(п_мТЕМП[6]) > 0 Тогда
		
		п_мТЕМП[5] = найти(п_мТЕМП[6],".");
		Если п_мТЕМП[5] > 0 Тогда
			// ========= часы    =================
			п_мТЕМП[3] = Лев(п_мТЕМП[6], найти(п_мТЕМП[6],".") - 1);//часы 
			п_мТЕМП[6] = Прав(п_мТЕМП[6], СтрДлина(п_мТЕМП[6]) - СтрДлина(п_мТЕМП[3])-1);// минуты и все что справа
			
			Если п_мТЕМП[3] = "" тогда
				п_мТЕМП[3] = "00";        
			Иначе
				//при переводе в дату лидирующий 0 у часов удаляется. Т.е. след. строка бесполезна
				//п_мТЕМП[3] = Формат(Число(п_мТЕМП[3]),п_мФорматы[1]);//часы в формат двух чисел     
			КонецЕсли;        
			
			п_мТЕМП[5] = найти(п_мТЕМП[6],".");
			Если п_мТЕМП[5] > 0 Тогда
				
				// ========= минуты    =================
				п_мТЕМП[4] = Лев(п_мТЕМП[6], найти(п_мТЕМП[6],".") - 1);
				п_мТЕМП[6] = Прав(п_мТЕМП[6], СтрДлина(п_мТЕМП[6]) - СтрДлина(п_мТЕМП[4])-1);// секунды и все что справа
				Если п_мТЕМП[4] = "" тогда
					п_мТЕМП[4] = "00";        
				Иначе
					п_мТЕМП[4] = Формат(Число(п_мТЕМП[4]),п_мФорматы[1]);//минуты в формат двух чисел     
				КонецЕсли;
				
				// ========= секунды    =================
				Если СтрДлина(п_мТЕМП[6]) = 0 Тогда
					п_мТЕМП[5] = "00";        
				Иначе
					п_мТЕМП[5] = Формат(Число(п_мТЕМП[6]),п_мФорматы[1]);//секунды в формат двух чисел     
				КонецЕсли;
				
			Иначе
				п_мТЕМП[4] = Формат(Число(п_мТЕМП[6]),п_мФорматы[1]);    
				п_мТЕМП[5] = "00";            
			КонецЕсли;     
		Иначе
			п_мТЕМП[3] = Формат(Число(п_мТЕМП[6]),п_мФорматы[1]);        
			п_мТЕМП[4] = "00";
			п_мТЕМП[5] = "00";
		КонецЕсли;
		
	Иначе
		п_мТЕМП[3] = "00";        
		п_мТЕМП[4] = "00";
		п_мТЕМП[5] = "00";            
	КонецЕсли;
	
	п_мТЕМП[6] = п_мТЕМП[0] + "." + п_мТЕМП[1] + "." + п_мТЕМП[2] + " " + п_мТЕМП[3] + ":" + п_мТЕМП[4] + ":" + п_мТЕМП[5];
	п_мТЕМП[6] = дата(п_мТЕМП[6]);
	
	Возврат п_мТЕМП[6];
    
КонецФункции

// "№ [Номер] от [Дата]" или "(№ [Номер] от [Дата])"
&НаКлиенте
Процедура РазборНомераИДаты_1(НоваяСтрока, Знач ОписаниеДокумента, СтрокаРазделитель= "от ", НомерВхожденияНомера = 1)
	
	ПозицияНомера = СтрНайти(ОписаниеДокумента, "№", , , НомерВхожденияНомера);
	Если Не ПозицияНомера = 0 Тогда
		ПозицияДата = СтрНайти(ОписаниеДокумента, ВРег(СтрокаРазделитель), , ПозицияНомера + 1);
		НоваяСтрока.КлиентНомерДокумента = СокрЛП(Сред(ОписаниеДокумента, ПозицияНомера + 1, ?(ПозицияДата > 0, ПозицияДата - 1 - ПозицияНомера, СтрДлина(ОписаниеДокумента))));
		НоваяСтрока.КлиентНомерДокумента = СтрЗаменить(НоваяСтрока.КлиентНомерДокумента, " ", "");
		Если Не ПозицияДата = 0 Тогда
			ОписаниеДата = СокрЛП(Сред(ОписаниеДокумента, ПозицияДата + СтрДлина(СтрокаРазделитель)));
			НоваяСтрока.КлиентДатаДокумента = СтрВДату(ОписаниеДата);
		КонецЕсли;	
	КонецЕсли;	
	Если Не ЗначениеЗаполнено(НоваяСтрока.КлиентДатаДокумента) И ЗначениеЗаполнено(НоваяСтрока.КлиентДата) Тогда
		НоваяСтрока.КлиентДатаДокумента = НоваяСтрока.КлиентДата;
	КонецЕсли;	
	Если Не ЗначениеЗаполнено(НоваяСтрока.КлиентНомерДокумента) И ЗначениеЗаполнено(НоваяСтрока.КлиентНомер) Тогда
		НоваяСтрока.КлиентНомерДокумента = НоваяСтрока.КлиентНомер;
	КонецЕсли;	
	
КонецПроцедуры	

// "([Номер] от [Дата])"
&НаКлиенте
Процедура РазборНомераИДаты_2(НоваяСтрока, Знач ОписаниеДокумента, СтрокаРазделитель = "от ", НомерВхожденияНомера = 1)
	
	ПозицияНомера = СтрНайти(ОписаниеДокумента, "(", , , НомерВхожденияНомера);
	Если Не ПозицияНомера = 0 Тогда
		ПозицияДата = СтрНайти(ОписаниеДокумента, ВРег(СтрокаРазделитель), , ПозицияНомера + 1);
		НоваяСтрока.КлиентНомерДокумента = СокрЛП(Сред(ОписаниеДокумента, ПозицияНомера + 1, ?(ПозицияДата > 0, ПозицияДата - 1 - ПозицияНомера, СтрДлина(ОписаниеДокумента))));
		НоваяСтрока.КлиентНомерДокумента = СтрЗаменить(НоваяСтрока.КлиентНомерДокумента, " ", "");
		Если Не ПозицияДата = 0 Тогда
			ОписаниеДата = СокрЛП(Сред(ОписаниеДокумента, ПозицияДата + СтрДлина(СтрокаРазделитель)));
			НоваяСтрока.КлиентДатаДокумента = СтрВДату(ОписаниеДата);
		КонецЕсли;	
	КонецЕсли;	
	Если Не ЗначениеЗаполнено(НоваяСтрока.КлиентДатаДокумента) И ЗначениеЗаполнено(НоваяСтрока.КлиентДата) Тогда
		НоваяСтрока.КлиентДатаДокумента = НоваяСтрока.КлиентДата;
	КонецЕсли;	
	Если Не ЗначениеЗаполнено(НоваяСтрока.КлиентНомерДокумента) И ЗначениеЗаполнено(НоваяСтрока.КлиентНомер) Тогда
		НоваяСтрока.КлиентНомерДокумента = НоваяСтрока.КлиентНомер;
	КонецЕсли;	
	
КонецПроцедуры	

// "([Дата],№[Номер]) или ([Дата], п/п [Номер]) или ([Дата], док. [Номер])"
&НаКлиенте
Процедура РазборНомераИДаты_3(НоваяСтрока, Знач ОписаниеДокумента, СтрокаРазделитель)
	
	ПозицияНомера = СтрНайти(ОписаниеДокумента, ВРег(СтрокаРазделитель));
	Если Не ПозицияНомера = 0 Тогда
		НоваяСтрока.КлиентНомерДокумента = СокрЛП(Сред(ОписаниеДокумента, ПозицияНомера + СтрДлина(СтрокаРазделитель), СтрДлина(ОписаниеДокумента)));
		НоваяСтрока.КлиентНомерДокумента = СтрЗаменить(НоваяСтрока.КлиентНомерДокумента, " ", "");
		НоваяСтрока.КлиентНомерДокумента = СтрЗаменить(НоваяСтрока.КлиентНомерДокумента, ")", "");
	КонецЕсли;	
	ПозицияДата = СтрНайти(ОписаниеДокумента, "(");
	Если Не ПозицияДата = 0 Тогда
		ОписаниеДата = СокрЛП(Сред(ОписаниеДокумента, ПозицияДата + 1, ПозицияНомера - 1 - ПозицияДата));
		НоваяСтрока.КлиентДатаДокумента = СтрВДату(ОписаниеДата);
	КонецЕсли;	
	Если Не ЗначениеЗаполнено(НоваяСтрока.КлиентДатаДокумента) И ЗначениеЗаполнено(НоваяСтрока.КлиентДата) Тогда
		НоваяСтрока.КлиентДатаДокумента = НоваяСтрока.КлиентДата;
	КонецЕсли;	
	Если Не ЗначениеЗаполнено(НоваяСтрока.КлиентНомерДокумента) И ЗначениеЗаполнено(НоваяСтрока.КлиентНомер) Тогда
		НоваяСтрока.КлиентНомерДокумента = НоваяСтрока.КлиентНомер;
	КонецЕсли;	
	
КонецПроцедуры	

# КонецОбласти

